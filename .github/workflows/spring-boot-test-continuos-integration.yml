name: SpringBootTest - Continuous Integration with GitHub Actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE: ${{ secrets.DOCKER_USER }}/spring-boot-test
      TAG: ${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Diagnóstico rápido
        run: |
          pwd
          ls -la

      - name: Build Application Jar
        # projeto está na raiz; sem working-directory extra
        run: mvn clean package

      - name: Docker Login
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Se seu docker-compose.yml está na raiz e a imagem está definida lá,
      # este passo vai construir a imagem. Certifique-se que o compose aponta para ${IMAGE} ou um nome fixo coerente.
      - name: Docker Compose Build
        run: docker compose build

      # Caso prefira construir direto com Dockerfile (sem compose), use:
      # - name: Docker Build
      #   run: docker build -t $IMAGE:latest -t $IMAGE:${TAG} .

      - name: Tag & Push to Docker Hub
        run: |
          # garanta que exista a tag 'latest' (se usou compose e sua imagem foi nomeada diferente, ajuste aqui)
          docker tag $IMAGE:latest $IMAGE:${TAG}

          docker push $IMAGE:${TAG}
          docker push $IMAGE:latest
